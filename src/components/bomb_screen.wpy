<template>
  <view wx:if="{{show}}">
    <view wx:if="{{types===0}}">
      <view class="pop-alert-box">
        <image src="../images/icon_alert.png" class="icon_alert" @tap.stop="callback"></image>
        <i class="iconfont icon-close" @tap.stop="close"></i>
      </view>
    </view>
    <view wx:else>
      <view class="pop-alert-box dialog">
        <view class="alert-content-box">
          <view class="alert-content">
            <image src="../images/icon_alert.png" class="icon_alert_dialog"></image>
            <view class="title">恭喜获得红包</view>
            <view class="title-doc">恭喜获得一张卡券，已发放至该账号</view>
          </view>
          <view class="btn_box">
            <view class="button type_red" @tap.stop="callback">点击领取</view>
          </view>
        </view>
        <i class="iconfont icon-close" @tap.stop="close"></i>
      </view>
    </view>
    <!--.stop: 绑定小程序捕获型事件，如catchtap；-->
    <view class="alert_mask" @tap.stop="close"></view>
  </view>
</template>
<script>
//自定义弹出动画的组件
import wepy from 'wepy';
export default class bombScreen extends wepy.component {
  data = {}
  props = {
    // 父向子单向动态传值,即home.wpy文件中data中的tps: 0,is_show_alert: true传递到这里了
    show: {
      default: false
    },
   // 父向子单向动态传值
    types: {
      default: 0
    }
  }
  //因为使用.user自定义事件,所以events中对应的监听函数不会再执行。
  events = {
  }
  methods = {
    close() {
      this.show = false;
      //   .user: 绑定用户自定义组件事件，通过$emit触发。注意，如果用了自定义事件，则events中对应的监听函数不会再执行。
      //对应home.wpy文件中的@close.user的close事件名称,触发home.wpy中closeAlert方法
      this.$emit("close")
    },
    callback() {
//    .user: 绑定用户自定义组件事件，通过$emit触发。注意，如果用了自定义事件，则events中对应的监听函数不会再执行。
      //对应home.wpy文件中的@callback.user的callback事件名称,触发home.wpy中alertCallback方法
      this.$emit("callback")
    }
  }

  onLoad() {

  }
}

</script>
<style lang="less">
  //z-index 属性设置元素的堆叠顺序。拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面
  //transform向左（上）平移它自己宽度（高度）的50%
  //position: fixed;相对屏幕布局
  .pop-alert-box {
    position: fixed;
    width: 550rpx;
    height: 550rpx;
    z-index: 2001;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    &.dialog {
      .alert-content-box {
        width: 100%;
        height: 100%;
        position: relative;
        background: #fff;
        border-radius: 10rpx;
      }
      .alert-content {
        padding: 20rpx;
        .title {
          font-weight: bold;
          color: #333;
        }
        .title-doc {
          padding-top: 10rpx;
          color: #999;
        }
      }
      .btn_box {
        width: 100%;
        position: absolute;
        bottom: 30rpx;
        .button {
          width: 90%;
        }

      }
    }
  }

  .icon_alert {
    width: 100%;
  }

  .icon_alert_dialog {
    width: 200rpx;
    height: 200rpx;
    margin: 0 auto;
  }

  .icon-close {
    display: inline-block;
    font-size: 60rpx;
    color: #dedede;
    margin-top: 50rpx;
  }

  .alert_mask {
    //实现遮罩效果
    background-color: rgba(0, 0, 0, .6);
    position: fixed;
    z-index: 2000;
    bottom: 0;
    right: 0;
    left: 0;
    top: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
  }

</style>
